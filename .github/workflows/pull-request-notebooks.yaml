name: Pull Request notebooks to landing page

on:
  pull_request:
#    types: [ closed ]
#    branches:
#      - main
#      - master
    paths:
      - '**.ipynb'

env:
  TARGET_REPO: 'kacperlukawski/landing_page'
  TARGET_BRANCH: 'examples/${{ github.event.pull_request.head.ref }}-pr-${{ github.event.pull_request.number }}'

jobs:
  convert-notebooks:
    name: Push notebooks to landing page
    runs-on: ubuntu-latest

    # TODO: uncomment once it's stable
    # This job will only run if the PR has been merged
    # if: github.event.pull_request.merged == true

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: 'examples'
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Get all changed markdown files
        id: changed-jupyter-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.ipynb
            */**.ipynb

      - name: List all changed Jupyter files
        if: steps.changed-jupyter-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-jupyter-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: |
          cd examples
          poetry install --with dev

      # TODO: convert just the notebooks modified in this PR, not all of them
      - name: Convert notebooks
        run: |
          cd examples
          poetry run python .scripts/convert-all-notebooks-to-hugo-markdown.py

      - name: Checkout landing page repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          path: 'landing_page'
          token: ${{ secrets.API_TOKEN_GITHUB }}

      - name: Checkout the target branch of the landing page repository
        run: |
          cd landing_page
          git fetch origin $TARGET_BRANCH:$TARGET_BRANCH || git checkout -b $TARGET_BRANCH

      - name: Copy converted notebooks to landing page
        run: |
          # cp --update=none -r examples/.dist/* landing_page/
          cp -r examples/.dist/* landing_page/

      - name: Commit changes to a new branch and start a PR
        env:
          GH_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
          USER_NAME: '${{ github.actor }}'
          USER_EMAIL: '${{ github.actor }}@users.noreply.github.com'
        run: |
          cd landing_page
          git config user.name $USER_NAME
          git config user.email $USER_EMAIL
          git add .
          git commit -m "${{ github.event.pull_request.title }}"
          git push --set-upstream origin $TARGET_BRANCH

          # Check if there is an existing PR for this branch
          PR_ID=$(gh pr list --repo "${{ env.TARGET_REPO }}" --state open --base master --head "${{ env.TARGET_BRANCH }}" --json number | jq -r '.[0].number')
          if [ -n "$PR_ID" ]; then
            gh pr create \
              --title "${{ github.event.pull_request.title }}" \
              --body "Add notebooks from PR ${{ github.event.repository.name }}#${{ github.event.pull_request.number }}" \
              --base master \
              --head $TARGET_BRANCH
          else
            echo "PR already exists: $PR_ID"
          fi
